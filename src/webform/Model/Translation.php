<?php
/**
 * Translation
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPIWebform\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * finAPI Web Form 2.0
 *
 * The following pages give you some general information on how to use our APIs.<br/>The actual API services documentation then follows further below. You can use the menu to jump between API sections.<br/><br/>This page has a built-in HTTP(S) client, so you can test the services directly from within this page, by filling in the request parameters and/or body in the respective services, and then hitting the TRY button. Note that you need to be authorized to make a successful API call. To authorize, refer to the '<a target='_blank' href='https://docs.finapi.io/?product=access#tag--Authorization'>Authorization</a>' section of Access, or in case you already have a valid user token, just use the QUICK AUTH on the left.<br/>Please also remember that all user management functions should be looked up in <a target='_blank' href='https://docs.finapi.io/?product=access'>Access</a>.<br/><br/>You should also check out the <a target='_blank' href='https://documentation.finapi.io/webform/'>Web Form 2.0 Public Documentation</a> as well as <a target='_blank' href='https://documentation.finapi.io/access/'>Access Public Documentation</a> for more information. If you need any help with the API, contact <a href='mailto:support@finapi.io'>support@finapi.io</a>.<br/><h2 id=\"general-information\">General information</h2><h3 id=\"general-request-ids\"><strong>Request IDs</strong></h3>With any API call, you can pass a request ID via a header with name \"X-Request-Id\". The request ID can be an arbitrary string with up to 255 characters. Passing a longer string will result in an error.<br/><br/>If you don't pass a request ID for a call, finAPI will generate a random ID internally.<br/><br/>The request ID is always returned back in the response of a service, as a header with name \"X-Request-Id\".<br/><br/>We highly recommend to always pass a (preferably unique) request ID, and include it into your client application logs whenever you make a request or receive a response(especially in the case of an error response). finAPI is also logging request IDs on its end. Having a request ID can help the finAPI support team to work more efficiently and solve tickets faster.<h3 id=\"type-coercion\"><strong>Type Coercion</strong></h3>In order to ease the integration for some languages, which do not natively support high precision number representations, Web Form 2.0 API supports relax type binding for the openAPI type <code>number</code>, which is used for money amount fields. If you use one of those languages, to avoid precision errors that can appear from <code>float</code> values, you can pass the amount as a <code>string</code>.<h3 id=\"general-faq\"><strong>FAQ</strong></h3><strong>Is there a finAPI SDK?</strong><br/>Currently we do not offer a native SDK, but there is the option to generate an SDKfor almost any target language via OpenAPI. Use the 'Download SDK' button on this page for SDK generation.<br/><br/><strong>Why do I need to keep authorizing when calling services on this page?</strong><br/>This page is a \"one-page-app\". Reloading the page resets the OAuth authorization context. There is generally no need to reload the page, so just don't do it and your authorization will persist.
 *
 * The version of the OpenAPI document: 2.523.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPIWebform\Client\Model;

use \ArrayAccess;
use \OpenAPIWebform\Client\ObjectSerializer;

/**
 * Translation Class Doc Comment
 *
 * @category Class
 * @description Set of titles and subtitles for a particular language, given in the &lt;a target&#x3D;&#39;_blank&#39; href&#x3D;&#39;https://www.iso.org/iso-639-language-codes.html&#39;&gt;ISO-639&lt;/a&gt; 2 letter format code, grouped by view
 * @package  OpenAPIWebform\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class Translation implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Translation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'bank_search_view' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'bank_login_view' => '\OpenAPIWebform\Client\Model\TranslationBlock',
        'redirect_bank_login_view' => '\OpenAPIWebform\Client\Model\TranslationBlock',
        'sca_method_selection_view' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'sca_challenge_view' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'account_selection_view_ais' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'account_selection_view_pis' => '\OpenAPIWebform\Client\Model\TranslationBlock',
        'data_download_view_ais' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'partial_confirmation_view' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'update_summary_view' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'confirmation_view' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock',
        'error_view' => '\OpenAPIWebform\Client\Model\ShortTranslationBlock'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'bank_search_view' => null,
        'bank_login_view' => null,
        'redirect_bank_login_view' => null,
        'sca_method_selection_view' => null,
        'sca_challenge_view' => null,
        'account_selection_view_ais' => null,
        'account_selection_view_pis' => null,
        'data_download_view_ais' => null,
        'partial_confirmation_view' => null,
        'update_summary_view' => null,
        'confirmation_view' => null,
        'error_view' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'bank_search_view' => true,
		'bank_login_view' => true,
		'redirect_bank_login_view' => true,
		'sca_method_selection_view' => true,
		'sca_challenge_view' => true,
		'account_selection_view_ais' => true,
		'account_selection_view_pis' => true,
		'data_download_view_ais' => true,
		'partial_confirmation_view' => true,
		'update_summary_view' => true,
		'confirmation_view' => true,
		'error_view' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bank_search_view' => 'bankSearchView',
        'bank_login_view' => 'bankLoginView',
        'redirect_bank_login_view' => 'redirectBankLoginView',
        'sca_method_selection_view' => 'scaMethodSelectionView',
        'sca_challenge_view' => 'scaChallengeView',
        'account_selection_view_ais' => 'accountSelectionViewAis',
        'account_selection_view_pis' => 'accountSelectionViewPis',
        'data_download_view_ais' => 'dataDownloadViewAis',
        'partial_confirmation_view' => 'partialConfirmationView',
        'update_summary_view' => 'updateSummaryView',
        'confirmation_view' => 'confirmationView',
        'error_view' => 'errorView'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bank_search_view' => 'setBankSearchView',
        'bank_login_view' => 'setBankLoginView',
        'redirect_bank_login_view' => 'setRedirectBankLoginView',
        'sca_method_selection_view' => 'setScaMethodSelectionView',
        'sca_challenge_view' => 'setScaChallengeView',
        'account_selection_view_ais' => 'setAccountSelectionViewAis',
        'account_selection_view_pis' => 'setAccountSelectionViewPis',
        'data_download_view_ais' => 'setDataDownloadViewAis',
        'partial_confirmation_view' => 'setPartialConfirmationView',
        'update_summary_view' => 'setUpdateSummaryView',
        'confirmation_view' => 'setConfirmationView',
        'error_view' => 'setErrorView'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bank_search_view' => 'getBankSearchView',
        'bank_login_view' => 'getBankLoginView',
        'redirect_bank_login_view' => 'getRedirectBankLoginView',
        'sca_method_selection_view' => 'getScaMethodSelectionView',
        'sca_challenge_view' => 'getScaChallengeView',
        'account_selection_view_ais' => 'getAccountSelectionViewAis',
        'account_selection_view_pis' => 'getAccountSelectionViewPis',
        'data_download_view_ais' => 'getDataDownloadViewAis',
        'partial_confirmation_view' => 'getPartialConfirmationView',
        'update_summary_view' => 'getUpdateSummaryView',
        'confirmation_view' => 'getConfirmationView',
        'error_view' => 'getErrorView'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('bank_search_view', $data ?? [], null);
        $this->setIfExists('bank_login_view', $data ?? [], null);
        $this->setIfExists('redirect_bank_login_view', $data ?? [], null);
        $this->setIfExists('sca_method_selection_view', $data ?? [], null);
        $this->setIfExists('sca_challenge_view', $data ?? [], null);
        $this->setIfExists('account_selection_view_ais', $data ?? [], null);
        $this->setIfExists('account_selection_view_pis', $data ?? [], null);
        $this->setIfExists('data_download_view_ais', $data ?? [], null);
        $this->setIfExists('partial_confirmation_view', $data ?? [], null);
        $this->setIfExists('update_summary_view', $data ?? [], null);
        $this->setIfExists('confirmation_view', $data ?? [], null);
        $this->setIfExists('error_view', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bank_search_view
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getBankSearchView()
    {
        return $this->container['bank_search_view'];
    }

    /**
     * Sets bank_search_view
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $bank_search_view bank_search_view
     *
     * @return self
     */
    public function setBankSearchView($bank_search_view)
    {

        if (is_null($bank_search_view)) {
            array_push($this->openAPINullablesSetToNull, 'bank_search_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bank_search_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['bank_search_view'] = $bank_search_view;

        return $this;
    }

    /**
     * Gets bank_login_view
     *
     * @return \OpenAPIWebform\Client\Model\TranslationBlock|null
     */
    public function getBankLoginView()
    {
        return $this->container['bank_login_view'];
    }

    /**
     * Sets bank_login_view
     *
     * @param \OpenAPIWebform\Client\Model\TranslationBlock|null $bank_login_view bank_login_view
     *
     * @return self
     */
    public function setBankLoginView($bank_login_view)
    {

        if (is_null($bank_login_view)) {
            array_push($this->openAPINullablesSetToNull, 'bank_login_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bank_login_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['bank_login_view'] = $bank_login_view;

        return $this;
    }

    /**
     * Gets redirect_bank_login_view
     *
     * @return \OpenAPIWebform\Client\Model\TranslationBlock|null
     */
    public function getRedirectBankLoginView()
    {
        return $this->container['redirect_bank_login_view'];
    }

    /**
     * Sets redirect_bank_login_view
     *
     * @param \OpenAPIWebform\Client\Model\TranslationBlock|null $redirect_bank_login_view redirect_bank_login_view
     *
     * @return self
     */
    public function setRedirectBankLoginView($redirect_bank_login_view)
    {

        if (is_null($redirect_bank_login_view)) {
            array_push($this->openAPINullablesSetToNull, 'redirect_bank_login_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('redirect_bank_login_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['redirect_bank_login_view'] = $redirect_bank_login_view;

        return $this;
    }

    /**
     * Gets sca_method_selection_view
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getScaMethodSelectionView()
    {
        return $this->container['sca_method_selection_view'];
    }

    /**
     * Sets sca_method_selection_view
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $sca_method_selection_view sca_method_selection_view
     *
     * @return self
     */
    public function setScaMethodSelectionView($sca_method_selection_view)
    {

        if (is_null($sca_method_selection_view)) {
            array_push($this->openAPINullablesSetToNull, 'sca_method_selection_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sca_method_selection_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['sca_method_selection_view'] = $sca_method_selection_view;

        return $this;
    }

    /**
     * Gets sca_challenge_view
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getScaChallengeView()
    {
        return $this->container['sca_challenge_view'];
    }

    /**
     * Sets sca_challenge_view
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $sca_challenge_view sca_challenge_view
     *
     * @return self
     */
    public function setScaChallengeView($sca_challenge_view)
    {

        if (is_null($sca_challenge_view)) {
            array_push($this->openAPINullablesSetToNull, 'sca_challenge_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sca_challenge_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['sca_challenge_view'] = $sca_challenge_view;

        return $this;
    }

    /**
     * Gets account_selection_view_ais
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getAccountSelectionViewAis()
    {
        return $this->container['account_selection_view_ais'];
    }

    /**
     * Sets account_selection_view_ais
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $account_selection_view_ais account_selection_view_ais
     *
     * @return self
     */
    public function setAccountSelectionViewAis($account_selection_view_ais)
    {

        if (is_null($account_selection_view_ais)) {
            array_push($this->openAPINullablesSetToNull, 'account_selection_view_ais');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('account_selection_view_ais', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['account_selection_view_ais'] = $account_selection_view_ais;

        return $this;
    }

    /**
     * Gets account_selection_view_pis
     *
     * @return \OpenAPIWebform\Client\Model\TranslationBlock|null
     */
    public function getAccountSelectionViewPis()
    {
        return $this->container['account_selection_view_pis'];
    }

    /**
     * Sets account_selection_view_pis
     *
     * @param \OpenAPIWebform\Client\Model\TranslationBlock|null $account_selection_view_pis account_selection_view_pis
     *
     * @return self
     */
    public function setAccountSelectionViewPis($account_selection_view_pis)
    {

        if (is_null($account_selection_view_pis)) {
            array_push($this->openAPINullablesSetToNull, 'account_selection_view_pis');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('account_selection_view_pis', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['account_selection_view_pis'] = $account_selection_view_pis;

        return $this;
    }

    /**
     * Gets data_download_view_ais
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getDataDownloadViewAis()
    {
        return $this->container['data_download_view_ais'];
    }

    /**
     * Sets data_download_view_ais
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $data_download_view_ais data_download_view_ais
     *
     * @return self
     */
    public function setDataDownloadViewAis($data_download_view_ais)
    {

        if (is_null($data_download_view_ais)) {
            array_push($this->openAPINullablesSetToNull, 'data_download_view_ais');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('data_download_view_ais', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['data_download_view_ais'] = $data_download_view_ais;

        return $this;
    }

    /**
     * Gets partial_confirmation_view
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getPartialConfirmationView()
    {
        return $this->container['partial_confirmation_view'];
    }

    /**
     * Sets partial_confirmation_view
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $partial_confirmation_view partial_confirmation_view
     *
     * @return self
     */
    public function setPartialConfirmationView($partial_confirmation_view)
    {

        if (is_null($partial_confirmation_view)) {
            array_push($this->openAPINullablesSetToNull, 'partial_confirmation_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('partial_confirmation_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['partial_confirmation_view'] = $partial_confirmation_view;

        return $this;
    }

    /**
     * Gets update_summary_view
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getUpdateSummaryView()
    {
        return $this->container['update_summary_view'];
    }

    /**
     * Sets update_summary_view
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $update_summary_view update_summary_view
     *
     * @return self
     */
    public function setUpdateSummaryView($update_summary_view)
    {

        if (is_null($update_summary_view)) {
            array_push($this->openAPINullablesSetToNull, 'update_summary_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('update_summary_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['update_summary_view'] = $update_summary_view;

        return $this;
    }

    /**
     * Gets confirmation_view
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getConfirmationView()
    {
        return $this->container['confirmation_view'];
    }

    /**
     * Sets confirmation_view
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $confirmation_view confirmation_view
     *
     * @return self
     */
    public function setConfirmationView($confirmation_view)
    {

        if (is_null($confirmation_view)) {
            array_push($this->openAPINullablesSetToNull, 'confirmation_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('confirmation_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['confirmation_view'] = $confirmation_view;

        return $this;
    }

    /**
     * Gets error_view
     *
     * @return \OpenAPIWebform\Client\Model\ShortTranslationBlock|null
     */
    public function getErrorView()
    {
        return $this->container['error_view'];
    }

    /**
     * Sets error_view
     *
     * @param \OpenAPIWebform\Client\Model\ShortTranslationBlock|null $error_view error_view
     *
     * @return self
     */
    public function setErrorView($error_view)
    {

        if (is_null($error_view)) {
            array_push($this->openAPINullablesSetToNull, 'error_view');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('error_view', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['error_view'] = $error_view;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


