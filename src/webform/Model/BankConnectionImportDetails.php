<?php
/**
 * BankConnectionImportDetails
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPIWebform\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * finAPI Web Form 2.0
 *
 * The following pages give you some general information on how to use our APIs.<br/>The actual API services documentation then follows further below. You can use the menu to jump between API sections.<br/><br/>This page has a built-in HTTP(S) client, so you can test the services directly from within this page, by filling in the request parameters and/or body in the respective services, and then hitting the TRY button. Note that you need to be authorized to make a successful API call. To authorize, refer to the '<a target='_blank' href='https://docs.finapi.io/?product=access#tag--Authorization'>Authorization</a>' section of Access, or in case you already have a valid user token, just use the QUICK AUTH on the left.<br/>Please also remember that all user management functions should be looked up in <a target='_blank' href='https://docs.finapi.io/?product=access'>Access</a>.<br/><br/>You should also check out the <a target='_blank' href='https://documentation.finapi.io/webform/'>Web Form 2.0 Public Documentation</a> as well as <a target='_blank' href='https://documentation.finapi.io/access/'>Access Public Documentation</a> for more information. If you need any help with the API, contact <a href='mailto:support@finapi.io'>support@finapi.io</a>.<br/><h2 id=\"general-information\">General information</h2><h3 id=\"general-request-ids\"><strong>Request IDs</strong></h3>With any API call, you can pass a request ID via a header with name \"X-Request-Id\". The request ID can be an arbitrary string with up to 255 characters. Passing a longer string will result in an error.<br/><br/>If you don't pass a request ID for a call, finAPI will generate a random ID internally.<br/><br/>The request ID is always returned back in the response of a service, as a header with name \"X-Request-Id\".<br/><br/>We highly recommend to always pass a (preferably unique) request ID, and include it into your client application logs whenever you make a request or receive a response(especially in the case of an error response). finAPI is also logging request IDs on its end. Having a request ID can help the finAPI support team to work more efficiently and solve tickets faster.<h3 id=\"type-coercion\"><strong>Type Coercion</strong></h3>In order to ease the integration for some languages, which do not natively support high precision number representations, Web Form 2.0 API supports relax type binding for the openAPI type <code>number</code>, which is used for money amount fields. If you use one of those languages, to avoid precision errors that can appear from <code>float</code> values, you can pass the amount as a <code>string</code>.<h3 id=\"general-faq\"><strong>FAQ</strong></h3><strong>Is there a finAPI SDK?</strong><br/>Currently we do not offer a native SDK, but there is the option to generate an SDKfor almost any target language via OpenAPI. Use the 'Download SDK' button on this page for SDK generation.<br/><br/><strong>Why do I need to keep authorizing when calling services on this page?</strong><br/>This page is a \"one-page-app\". Reloading the page resets the OAuth authorization context. There is generally no need to reload the page, so just don't do it and your authorization will persist.
 *
 * The version of the OpenAPI document: 2.523.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPIWebform\Client\Model;

use \ArrayAccess;
use \OpenAPIWebform\Client\ObjectSerializer;

/**
 * BankConnectionImportDetails Class Doc Comment
 *
 * @category Class
 * @package  OpenAPIWebform\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class BankConnectionImportDetails implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BankConnectionImportDetails';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'bank' => '\OpenAPIWebform\Client\Model\ImportBankDetails',
        'bank_connection_name' => 'string',
        'skip_positions_download' => 'bool',
        'load_owner_data' => 'bool',
        'max_days_for_download' => 'int',
        'account_types' => '\OpenAPIWebform\Client\Model\AccountType[]',
        'callbacks' => '\OpenAPIWebform\Client\Model\Callbacks',
        'profile_id' => 'string',
        'redirect_url' => 'string',
        'allow_test_bank' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'bank' => null,
        'bank_connection_name' => null,
        'skip_positions_download' => null,
        'load_owner_data' => null,
        'max_days_for_download' => 'int32',
        'account_types' => null,
        'callbacks' => null,
        'profile_id' => null,
        'redirect_url' => null,
        'allow_test_bank' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'bank' => true,
		'bank_connection_name' => true,
		'skip_positions_download' => true,
		'load_owner_data' => true,
		'max_days_for_download' => true,
		'account_types' => true,
		'callbacks' => true,
		'profile_id' => true,
		'redirect_url' => true,
		'allow_test_bank' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bank' => 'bank',
        'bank_connection_name' => 'bankConnectionName',
        'skip_positions_download' => 'skipPositionsDownload',
        'load_owner_data' => 'loadOwnerData',
        'max_days_for_download' => 'maxDaysForDownload',
        'account_types' => 'accountTypes',
        'callbacks' => 'callbacks',
        'profile_id' => 'profileId',
        'redirect_url' => 'redirectUrl',
        'allow_test_bank' => 'allowTestBank'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bank' => 'setBank',
        'bank_connection_name' => 'setBankConnectionName',
        'skip_positions_download' => 'setSkipPositionsDownload',
        'load_owner_data' => 'setLoadOwnerData',
        'max_days_for_download' => 'setMaxDaysForDownload',
        'account_types' => 'setAccountTypes',
        'callbacks' => 'setCallbacks',
        'profile_id' => 'setProfileId',
        'redirect_url' => 'setRedirectUrl',
        'allow_test_bank' => 'setAllowTestBank'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bank' => 'getBank',
        'bank_connection_name' => 'getBankConnectionName',
        'skip_positions_download' => 'getSkipPositionsDownload',
        'load_owner_data' => 'getLoadOwnerData',
        'max_days_for_download' => 'getMaxDaysForDownload',
        'account_types' => 'getAccountTypes',
        'callbacks' => 'getCallbacks',
        'profile_id' => 'getProfileId',
        'redirect_url' => 'getRedirectUrl',
        'allow_test_bank' => 'getAllowTestBank'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('bank', $data ?? [], null);
        $this->setIfExists('bank_connection_name', $data ?? [], null);
        $this->setIfExists('skip_positions_download', $data ?? [], false);
        $this->setIfExists('load_owner_data', $data ?? [], false);
        $this->setIfExists('max_days_for_download', $data ?? [], 0);
        $this->setIfExists('account_types', $data ?? [], null);
        $this->setIfExists('callbacks', $data ?? [], null);
        $this->setIfExists('profile_id', $data ?? [], null);
        $this->setIfExists('redirect_url', $data ?? [], null);
        $this->setIfExists('allow_test_bank', $data ?? [], true);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['bank_connection_name']) && (mb_strlen($this->container['bank_connection_name']) > 64)) {
            $invalidProperties[] = "invalid value for 'bank_connection_name', the character length must be smaller than or equal to 64.";
        }

        if (!is_null($this->container['bank_connection_name']) && (mb_strlen($this->container['bank_connection_name']) < 1)) {
            $invalidProperties[] = "invalid value for 'bank_connection_name', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['max_days_for_download']) && ($this->container['max_days_for_download'] > 3650)) {
            $invalidProperties[] = "invalid value for 'max_days_for_download', must be smaller than or equal to 3650.";
        }

        if (!is_null($this->container['profile_id']) && (mb_strlen($this->container['profile_id']) > 36)) {
            $invalidProperties[] = "invalid value for 'profile_id', the character length must be smaller than or equal to 36.";
        }

        if (!is_null($this->container['profile_id']) && (mb_strlen($this->container['profile_id']) < 36)) {
            $invalidProperties[] = "invalid value for 'profile_id', the character length must be bigger than or equal to 36.";
        }

        if (!is_null($this->container['redirect_url']) && (mb_strlen($this->container['redirect_url']) > 2048)) {
            $invalidProperties[] = "invalid value for 'redirect_url', the character length must be smaller than or equal to 2048.";
        }

        if (!is_null($this->container['redirect_url']) && (mb_strlen($this->container['redirect_url']) < 1)) {
            $invalidProperties[] = "invalid value for 'redirect_url', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['redirect_url']) && !preg_match("/https:\/\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,63}\\b([-a-zA-Z0-9()@:%_+.~#?&\/=]*)/", $this->container['redirect_url'])) {
            $invalidProperties[] = "invalid value for 'redirect_url', must be conform to the pattern /https:\/\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,63}\\b([-a-zA-Z0-9()@:%_+.~#?&\/=]*)/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bank
     *
     * @return \OpenAPIWebform\Client\Model\ImportBankDetails|null
     */
    public function getBank()
    {
        return $this->container['bank'];
    }

    /**
     * Sets bank
     *
     * @param \OpenAPIWebform\Client\Model\ImportBankDetails|null $bank bank
     *
     * @return self
     */
    public function setBank($bank)
    {

        if (is_null($bank)) {
            array_push($this->openAPINullablesSetToNull, 'bank');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bank', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['bank'] = $bank;

        return $this;
    }

    /**
     * Gets bank_connection_name
     *
     * @return string|null
     */
    public function getBankConnectionName()
    {
        return $this->container['bank_connection_name'];
    }

    /**
     * Sets bank_connection_name
     *
     * @param string|null $bank_connection_name Custom name for the bank connection
     *
     * @return self
     */
    public function setBankConnectionName($bank_connection_name)
    {
        if (!is_null($bank_connection_name) && (mb_strlen($bank_connection_name) > 64)) {
            throw new \InvalidArgumentException('invalid length for $bank_connection_name when calling BankConnectionImportDetails., must be smaller than or equal to 64.');
        }
        if (!is_null($bank_connection_name) && (mb_strlen($bank_connection_name) < 1)) {
            throw new \InvalidArgumentException('invalid length for $bank_connection_name when calling BankConnectionImportDetails., must be bigger than or equal to 1.');
        }


        if (is_null($bank_connection_name)) {
            array_push($this->openAPINullablesSetToNull, 'bank_connection_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bank_connection_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['bank_connection_name'] = $bank_connection_name;

        return $this;
    }

    /**
     * Gets skip_positions_download
     *
     * @return bool|null
     */
    public function getSkipPositionsDownload()
    {
        return $this->container['skip_positions_download'];
    }

    /**
     * Sets skip_positions_download
     *
     * @param bool|null $skip_positions_download Whether to skip the download of transactions and securities or not.<br/>This parameter refers to the same parameter of the \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/import'>Import a new bank connection</a>\" service in the finAPI Access API.
     *
     * @return self
     */
    public function setSkipPositionsDownload($skip_positions_download)
    {

        if (is_null($skip_positions_download)) {
            array_push($this->openAPINullablesSetToNull, 'skip_positions_download');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('skip_positions_download', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['skip_positions_download'] = $skip_positions_download;

        return $this;
    }

    /**
     * Gets load_owner_data
     *
     * @return bool|null
     */
    public function getLoadOwnerData()
    {
        return $this->container['load_owner_data'];
    }

    /**
     * Sets load_owner_data
     *
     * @param bool|null $load_owner_data Whether to load information about the bank connection owner(s).<br/>This parameter refers to the same parameter of the \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/import'>Import a new bank connection</a>\" service in the finAPI Access API.
     *
     * @return self
     */
    public function setLoadOwnerData($load_owner_data)
    {

        if (is_null($load_owner_data)) {
            array_push($this->openAPINullablesSetToNull, 'load_owner_data');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('load_owner_data', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['load_owner_data'] = $load_owner_data;

        return $this;
    }

    /**
     * Gets max_days_for_download
     *
     * @return int|null
     */
    public function getMaxDaysForDownload()
    {
        return $this->container['max_days_for_download'];
    }

    /**
     * Sets max_days_for_download
     *
     * @param int|null $max_days_for_download Defines the limit of how many days of the transaction history will be requested from the bank.<br/>This parameter refers to the same parameter of the \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/import'>Import a new bank connection</a>\" service in the finAPI Access API.
     *
     * @return self
     */
    public function setMaxDaysForDownload($max_days_for_download)
    {

        if (!is_null($max_days_for_download) && ($max_days_for_download > 3650)) {
            throw new \InvalidArgumentException('invalid value for $max_days_for_download when calling BankConnectionImportDetails., must be smaller than or equal to 3650.');
        }


        if (is_null($max_days_for_download)) {
            array_push($this->openAPINullablesSetToNull, 'max_days_for_download');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('max_days_for_download', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['max_days_for_download'] = $max_days_for_download;

        return $this;
    }

    /**
     * Gets account_types
     *
     * @return \OpenAPIWebform\Client\Model\AccountType[]|null
     */
    public function getAccountTypes()
    {
        return $this->container['account_types'];
    }

    /**
     * Sets account_types
     *
     * @param \OpenAPIWebform\Client\Model\AccountType[]|null $account_types A set of account types that are considered for the import. If no values is given, then all accounts will be imported.<br/>This parameter refers to the same parameter of the \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/import'>Import a new bank connection</a>\" service in the finAPI Access API.
     *
     * @return self
     */
    public function setAccountTypes($account_types)
    {



        if (is_null($account_types)) {
            array_push($this->openAPINullablesSetToNull, 'account_types');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('account_types', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['account_types'] = $account_types;

        return $this;
    }

    /**
     * Gets callbacks
     *
     * @return \OpenAPIWebform\Client\Model\Callbacks|null
     */
    public function getCallbacks()
    {
        return $this->container['callbacks'];
    }

    /**
     * Sets callbacks
     *
     * @param \OpenAPIWebform\Client\Model\Callbacks|null $callbacks callbacks
     *
     * @return self
     */
    public function setCallbacks($callbacks)
    {

        if (is_null($callbacks)) {
            array_push($this->openAPINullablesSetToNull, 'callbacks');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('callbacks', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['callbacks'] = $callbacks;

        return $this;
    }

    /**
     * Gets profile_id
     *
     * @return string|null
     */
    public function getProfileId()
    {
        return $this->container['profile_id'];
    }

    /**
     * Sets profile_id
     *
     * @param string|null $profile_id The profile to be applied to the web form.<br/>This will overwrite the default profile, if such a profile exists.
     *
     * @return self
     */
    public function setProfileId($profile_id)
    {
        if (!is_null($profile_id) && (mb_strlen($profile_id) > 36)) {
            throw new \InvalidArgumentException('invalid length for $profile_id when calling BankConnectionImportDetails., must be smaller than or equal to 36.');
        }
        if (!is_null($profile_id) && (mb_strlen($profile_id) < 36)) {
            throw new \InvalidArgumentException('invalid length for $profile_id when calling BankConnectionImportDetails., must be bigger than or equal to 36.');
        }


        if (is_null($profile_id)) {
            array_push($this->openAPINullablesSetToNull, 'profile_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('profile_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['profile_id'] = $profile_id;

        return $this;
    }

    /**
     * Gets redirect_url
     *
     * @return string|null
     */
    public function getRedirectUrl()
    {
        return $this->container['redirect_url'];
    }

    /**
     * Sets redirect_url
     *
     * @param string|null $redirect_url The URL where the end-user will be redirected to after completing the bank login and (possibly) the SCA on the bank's website. Must always be provided by mandators with <code>FULLY_LICENSED</code> or <code>AISP</code> license type, and may not be provided by mandators with other license types. Find more info in the <a target='_blank' href='https://documentation.finapi.io/webform/Licensed-customers-using-the-Web-Form.2832302195.html'>Web Form 2.0 Public Documentation</a>.
     *
     * @return self
     */
    public function setRedirectUrl($redirect_url)
    {
        if (!is_null($redirect_url) && (mb_strlen($redirect_url) > 2048)) {
            throw new \InvalidArgumentException('invalid length for $redirect_url when calling BankConnectionImportDetails., must be smaller than or equal to 2048.');
        }
        if (!is_null($redirect_url) && (mb_strlen($redirect_url) < 1)) {
            throw new \InvalidArgumentException('invalid length for $redirect_url when calling BankConnectionImportDetails., must be bigger than or equal to 1.');
        }
        if (!is_null($redirect_url) && (!preg_match("/https:\/\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,63}\\b([-a-zA-Z0-9()@:%_+.~#?&\/=]*)/", $redirect_url))) {
            throw new \InvalidArgumentException("invalid value for \$redirect_url when calling BankConnectionImportDetails., must conform to the pattern /https:\/\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,63}\\b([-a-zA-Z0-9()@:%_+.~#?&\/=]*)/.");
        }


        if (is_null($redirect_url)) {
            array_push($this->openAPINullablesSetToNull, 'redirect_url');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('redirect_url', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['redirect_url'] = $redirect_url;

        return $this;
    }

    /**
     * Gets allow_test_bank
     *
     * @return bool|null
     */
    public function getAllowTestBank()
    {
        return $this->container['allow_test_bank'];
    }

    /**
     * Sets allow_test_bank
     *
     * @param bool|null $allow_test_bank Whether the bank search will include the test banks in the search results. When set to false, all test banks will be excluded from the bank search results.
     *
     * @return self
     */
    public function setAllowTestBank($allow_test_bank)
    {

        if (is_null($allow_test_bank)) {
            array_push($this->openAPINullablesSetToNull, 'allow_test_bank');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('allow_test_bank', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['allow_test_bank'] = $allow_test_bank;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


